server:
  port: 8081
spring:
  application:
    name: feed-adapter-app
  profiles:
        active: "dev"
---
spring:
  config:
    activate:
      on-profile: "dev"
  datasource:
    driverClassName: org.h2.Driver
    password: ''
    url: jdbc:h2:mem:testdb
    username: sa
    h2:
      console:
        enabled: true
        path: /h2-console
    jpa:
      database-platform: org.hibernate.dialect.H2Dialect
feedadapter:
    fixedDelay: 5000
    newsnum: 10
    url: http://feeds.nos.nl/nosjournaal?format=xml
graphql:
  servlet:
    exception-handlers-enabled: true
graphiql:
  headers:
    Authorization: "Bearer 05bd9a5f3fe0408f89520946b0fe1b06"
  props:
    variables:
      headerEditorEnabled: true
altair:
  mapping: /altair
  endpoint:
    graphql: /graphql
    subscriptions: /subscriptions
  subscriptions:
    timeout: 30
    reconnect: false
  enabled: true
  pageTitle: Altair
  cdn:
    enabled: false
    version: 2.1.7
#  props:
#    resources:
#      defaultQuery: defaultQuery.graphql
#      variables: variables.graphql
#  headers:
#    Authorization: "Bearer <your-token>"

---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    driverClassName: org.h2.Driver
    password: ''
    url: jdbc:h2:mem:testdb
    username: sa
    h2:
      console:
        enabled: true
        path: /h2-console
    jpa:
      database-platform: org.hibernate.dialect.H2Dialect
  feedadapter:
    fixedDelay: 300000
    newsnum: 10
    url: http://feeds.nos.nl/nosjournaal?format=xml
  graphql:
    servlet:
      exception-handlers-enabled: true
  graphiql:
    headers:
      Authorization: "Bearer 05bd9a5f3fe0408f89520946b0fe1b06"
    props:
      variables:
        headerEditorEnabled: true
  altair:
    mapping: /altair
    endpoint:
      graphql: /graphql
      subscriptions: /subscriptions
    subscriptions:
      timeout: 30
      reconnect: false
    enabled: true
    pageTitle: Altair
    cdn:
      enabled: false
      version: 2.1.7
  #  props:
  #    resources:
  #      defaultQuery: defaultQuery.graphql
  #      variables: variables.graphql
  #  headers:
  #    Authorization: "Bearer <your-token>"